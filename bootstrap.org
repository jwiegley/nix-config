:PROPERTIES:
:ID:       5AB0D908-77B6-4FF0-993F-808861D0A7C6
:CREATED:  [2024-08-01 Thu 11:36]
:END:
#+title: Bootstrap new macOS system with Nix

After the system installation and copying of the =~/src= directory, first thing
is to make =sudo= easier to use, if desired:

#+begin_src sh
EDITOR=vi sudo visudo
#+end_src

Install Nix:
#+begin_src sh
sh <(curl -L https://nixos.org/nix/install)
#+end_src

Logout and back in, then install the minimum needed tools, which is =git= and
=make=:
#+begin_src sh
nix-env -i git gnumake
#+end_src

Setup the shell environment, since a few things are missing:
#+begin_src sh
export HOSTNAME=clio
export NIX_CONF=/Users/johnw/src/nix
export NIX_PATH=/Users/johnw/.nix-defexpr/channels:darwin=/Users/johnw/src/nix/darwin:darwin-config=/Users/johnw/src/nix/config/darwin.nix:hm-config=/Users/johnw/src/nix/config/home.nix:home-manager=/Users/johnw/src/nix/home-manager:localconfig=/Users/johnw/src/nix/config/${HOSTNAME}.nix:nixpkgs=/Users/johnw/src/nix/nixpkgs:ssh-auth-sock=/Users/johnw/.config/gnupg/S.gpg-agent.ssh:ssh-config-file=/Users/johnw/.ssh/config
#+end_src

Build the Nix environment. This will take a very long time:
#+begin_src sh
~/src/nix/bin/u clio build
#+end_src

In order to switch to the new environment, we need =darwin-rebuild= to be on the
path:
#+begin_src sh
export DARWIN_REBUILD=$(find /nix/store -name darwin-rebuild -type f | head -1)
export PATH=${DARWIN_REBUILD}/..:$PATH
#+end_src

Remove what we installed manually above. Note that these may also need to be
manually added to the path, as we did for =darwin-rebuild=.
#+begin_src sh
nix-env -e git gnumake
#+end_src

Now we can switch:
#+begin_src sh
~/src/nix/bin/u clio switch
#+end_src

# build-users-group = nixbld
